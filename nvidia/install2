#!/bin/bash

echo '--------------------------------------------------'
echo '|                 Config Install                  |'
echo '--------------------------------------------------'

#Замените на своё:
username=neo
hostname=matrix
pass=1811
disk_root=/dev/nvme0n1p5
disk_boot=/dev/nvme0n1p4

echo '--------------------------------------------------'
echo '|Install Arch Linux '$username'@'hostname'       |'
echo '--------------------------------------------------'
arch-chroot /mnt /bin/bash -c "pacman -Sy sed wget --noconfirm"
arch-chroot /mnt /bin/bash -c "loadkeys ru"
arch-chroot /mnt /bin/bash -c "setfont cyr-sun16"
#passwd root:
arch-chroot /mnt /bin/bash -c "(
    echo $pass
    echo $pass
) | passwd"
#add user:
arch-chroot /mnt /bin/bash -c "useradd -G wheel -s /bin/bash -m $username"
#passwd user:
arch-chroot /mnt /bin/bash -c "(
    echo $pass
    echo $pass
) | passwd $username"
arch-chroot /mnt /bin/bash -c "echo 'FONT=cyr-sun16' >> /etc/vconsole.conf"
#services:
arch-chroot /mnt /bin/bash -c "systemctl enable iwd.service"
#services:
arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager.service"
#mount boot:
arch-chroot /mnt /bin/bash -c "mount $disk_boot /boot/efi"
#hostname:
arch-chroot /mnt /bin/bash -c "echo $hostname >> /etc/hostname"
#locale eng:
arch-chroot /mnt /bin/bash -c "sed -i 's/#en_US.U/en_US.U/g' /etc/locale.gen"
#locale rus:
arch-chroot /mnt /bin/bash -c "sed -i 's/#ru_RU.U/ru_RU.U/g' /etc/locale.gen"
#locale generation:
arch-chroot /mnt /bin/bash -c "locale-gen"
#locale conf:
arch-chroot /mnt /bin/bash -c "echo LANG=en_US.UTF-8 >> /etc/locale.conf"
#locale conf:
arch-chroot /mnt /bin/bash -c "echo LANG=ru_RU.UTF-8 >> /etc/locale.conf"
#pacman.conf:
arch-chroot /mnt /bin/bash -c "sed 's/#ParallelDownloads = 5/ParallelDownloads = 5/' -i /etc/pacman.conf"
#pacman.conf:
arch-chroot /mnt /bin/bash -c "echo -e '[multilib]\nInclude = /etc/pacman.d/mirrorlist\n' >> /etc/pacman.conf"
#install core lqx:
arch-chroot /mnt /bin/bash -c "pacman-key --keyserver hkps://keyserver.ubuntu.com --recv-keys 9AE4078033F8024D"
#install core lqx:
arch-chroot /mnt /bin/bash -c "pacman-key --lsign-key 9AE4078033F8024D"
#install core lqx:
arch-chroot /mnt /bin/bash -c "echo '[liquorix]' >> /etc/pacman.conf"
#install core lqx:
arch-chroot /mnt /bin/bash -c "echo 'Server = https://liquorix.net/archlinux/$repo/$arch' >> /etc/pacman.conf"
#pacman —Sy:
arch-chroot /mnt /bin/bash -c "pacman -Sy"
#install core lqx:
arch-chroot /mnt /bin/bash -c "pacman -S linux-lqx linux-lqx-headers --noconfirm"
#sudoers:
#без запроса пароля:
#arch-chroot /mnt /bin/bash -c "sed 's/# %wheel ALL=(ALL:ALL) NOPASSWD: ALL/%wheel ALL=(ALL:ALL) NOPASSWD: ALL/' -i /etc/sudoers"
#с запросом пароля:
arch-chroot /mnt /bin/bash -c "sed 's/# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/' -i /etc/sudoers"
#chown:
##chown -R $username:users /home/$username/
#blkid:
arch-chroot /mnt /bin/bash -c "uuid=$(blkid -s UUID -o value $disk_root)"
#раскомментируйте необходимое:
#refind nvidia:
arch-chroot /mnt /bin/bash -c "echo '"Boot to standard options" "rw root=UUID='$uuid' rootflags=subvol=@ loglevel=0 quiet splash rootfstype=btrfs nvidia-drm.modeset=1"' >> /boot/refind_linux.conf"
#refind nvidia:
arch-chroot /mnt /bin/bash -c "echo '"Boot to single-user mode" "rw root=UUID='$uuid' rootflags=subvol=@ loglevel=0 quiet splash rootfstype=btrfs nvidia-drm.modeset=1 single"' >> /boot/refind_linux.conf"
#refind mesa:
#arch-chroot /mnt /bin/bash -c "echo '"Boot to standard options" "rw root=UUID='$uuid' rootflags=subvol=@ loglevel=0 quiet splash rootfstype=btrfs"' >> /boot/refind_linux.conf"
#refind mesa:
#arch-chroot /mnt /bin/bash -c "echo '"Boot to single-user mode" "rw root=UUID='$uuid' rootflags=subvol=@ loglevel=0 quiet splash rootfstype=btrfs single"' >> /boot/refind_linux.conf"
#refind:
arch-chroot /mnt /bin/bash -c "echo '"Boot with minimal options ro root='$disk_root'"' >> /boot/refind_linux.conf"
#refind:
arch-chroot /mnt /bin/bash -c "refind-install"
#install zsh:
echo '--------------------------------------------------'
echo '|            Установка оболочки zsh              |'
echo '--------------------------------------------------'
#zsh:
arch-chroot /mnt /bin/bash -c "pacman -Sy zsh zsh-completions zsh-syntax-highlighting zsh-autosuggestions grml-zsh-config --noconfirm"
#zsh chsh:
arch-chroot /mnt /bin/bash -c "chsh -s /usr/bin/zsh"
#zsh chsh root:
arch-chroot /mnt /bin/bash -c "chsh -s /usr/bin/zsh/$username"
#zsh:
arch-chroot /mnt /bin/bash -c "cd /root/"
arch-chroot /mnt /bin/bash -c "wget 'https://raw.githubusercontent.com/like913/arch-install/master/config/.zshrc'"
#zsh:
arch-chroot /mnt /bin/bash -c "cd /home/$username/"
arch-chroot /mnt /bin/bash -c "wget 'https://raw.githubusercontent.com/like913/arch-install/master/config/.zshrc'"
#chown:
chown -R $username:users .zshrc
echo "$username:$passwd" | arch-chroot /mnt chpasswd
arch-chroot /mnt /bin/bash -c "exit"
#sleep:
sleep $sleep
echo '--------------------------------------------------------------------------------'
echo '|                    Установка пользовательских приложений                     |'
echo '--------------------------------------------------------------------------------'
sh /home/$username/install3.sh $username $pass
#exit:
exit
